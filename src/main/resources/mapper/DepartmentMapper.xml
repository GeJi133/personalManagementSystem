<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.csu.personalManagementSystem.persistence.DepartmentMapper">

    <select id="getAll" resultType="Department">
        SELECT
        dno,department.department,business,employee.name as manager,performance
        FROM
        department left join employee on department.mid = employee.id
    </select>


    <select id="getDepartmentByDno" parameterType="string" resultType="Department">
        SELECT
        dno,department.department,business,employee.name as manager,performance
        FROM
        department left join employee on department.mid = employee.id
        WHERE
        department.dno = #{dno}
  </select>


    <select id="getDepartmentByDepartment" parameterType="string" resultType="Department">
        SELECT
        dno,department.department,business,employee.name as manager,performance
        FROM
        department left join employee on department.mid = employee.id
        WHERE 1=1
        <if test="department != null and department!=''">
            AND (department.department like concat('%',#{department},'%'))
        </if>
    </select>


    <select id="getDepartmentByBusiness" parameterType="string" resultType="Department">
        SELECT
        dno,department.department,business,employee.name as manager,performance
        FROM
        department left join employee on department.mid = employee.id
        WHERE 1=1
        <if test="business != null and business!=''">
            AND (department.business like concat('%',#{business},'%'))
        </if>
    </select>


    <select id="getAllEmployee" parameterType="string" resultType="Employee">
        SELECT
        employee.id,name,sex,employee.department,employee_career.career,position,jobs,employee_language.language,employee_family.family,startTime,endTime
        FROM
        department,employee,employee_career,employee_language,employee_family
        WHERE department.department = employee.department
        AND employee.id = employee_career.id
        AND employee.id = employee_language.id
        AND employee.id = employee_family.id
        <if test="dno != null and dno!=''">
            AND department.department = #{dno}
        </if>
        AND employee.position in ( 1 , 2)
    </select>

    <select id="getAllJob" parameterType="string" resultType="Job">
        SELECT
        jno,job.dno,description,job
        FROM
        department,job
        WHERE department.dno = job.dno
        <if test="dno != null and dno!=''">
            AND department.department = #{dno}
        </if>

    </select>


    <insert id="insertDepartment" parameterType="Department">
    INSERT INTO department
      (dno, department, business,mid,performance)
    VALUES
      (#{dno}, #{department}, #{business},#{mid},#{performance})
  </insert>


    <update id="updateDepartment" parameterType="Department">
        UPDATE department
        <set>
            department=#{department},
            business=#{business},
            performance=#{performance}
        </set>
        WHERE dno = #{dno}
    </update>


    <delete id="deleteDepartment" parameterType="string">
    delete from department
    where dno = #{dno}
  </delete>
</mapper>